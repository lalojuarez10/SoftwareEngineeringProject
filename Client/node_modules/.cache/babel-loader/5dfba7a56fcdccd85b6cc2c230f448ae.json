{"ast":null,"code":"//Where our actual state actually goes\n//where we check our actions, getItems action for ex\nimport uuid from 'react-uuid';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\nconst intialState = {\n  items: [],\n  loading: false\n}; // Create a case for each type of action in ItemAction.js\n\nexport default function (state = intialState, action) {\n  // state is from above for now, action has a type\n  switch (action.type) {\n    case GET_ITEMS:\n      return { ...state,\n        // fetches all the items from above for now later the API\n        items: action.payload,\n        loading: false\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item.id != action.payload)\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        items: [action.payload, ...state.items] // add new item to the existing state items\n\n      };\n\n    case ITEMS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n    // returns initial state for now\n  }\n}","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/reducers/itemReducer.js"],"names":["uuid","GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","intialState","items","loading","state","action","type","payload","filter","item","id"],"mappings":"AAAA;AACA;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,aAA3C,QAAgE,kBAAhE;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,OAAO,EAAE;AAFO,CAApB,C,CAIA;;AACA,eAAe,UAASC,KAAK,GAAGH,WAAjB,EAA8BI,MAA9B,EAAsC;AAAM;AACzD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AACoB;AACzBF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,WAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACE,OAA7C;AAFJ,OAAP;;AAIJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,KAA1B,CAFJ,CAEwC;;AAFxC,OAAP;;AAIJ,SAAKF,aAAL;AACI,aAAO,EACL,GAAGI,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIJ;AACE,aAAOC,KAAP;AAAyB;AAvB7B;AAyBD","sourcesContent":["//Where our actual state actually goes\n//where we check our actions, getItems action for ex\nimport uuid from 'react-uuid';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\n\nconst intialState = {\n    items: [],\n    loading: false \n}\n// Create a case for each type of action in ItemAction.js\nexport default function(state = intialState, action) {     // state is from above for now, action has a type\n  switch(action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,                // fetches all the items from above for now later the API\n        items: action.payload,\n        loading: false\n    };\n    case DELETE_ITEM:\n        return {\n            ...state,\n            items: state.items.filter(item => item.id != action.payload)\n        }\n    case ADD_ITEM:\n        return {\n            ...state,\n            items: [action.payload, ...state.items]    // add new item to the existing state items\n        };\n    case ITEMS_LOADING:\n        return {\n          ...state, \n          loading: true\n        }\n    default:\n      return state;            // returns initial state for now\n  }\n}"]},"metadata":{},"sourceType":"module"}