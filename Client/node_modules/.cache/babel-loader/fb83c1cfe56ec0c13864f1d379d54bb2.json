{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'react-uuid'; //generate ids for items = static for now\n\nclass ShoppingList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // an array of items, hardcoded for now will later be from the mongoDB\n      items: [{\n        id: uuid(),\n        name: 'Eggs'\n      }, {\n        id: uuid(),\n        name: 'Milk'\n      }, {\n        id: uuid(),\n        name: 'Steak'\n      }, {\n        id: uuid(),\n        name: 'Water'\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items\n    } = this.state; // {} = destructoring, we pull items from this.state and put into variable items\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const name = prompt('Enter Item');\n\n        if (name) {\n          this.setState(state => ({\n            items: [...state.items, {\n              id: uuid(),\n              name\n            }]\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Add Item\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, items.map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, name))))));\n  }\n\n}\n\nexport default ShoppingList;","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","ShoppingList","state","items","id","name","render","marginBottom","prompt","setState","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,YALP;AAMA,SACEC,aADF,EAEEC,eAFF,QAGO,wBAHP;AAIA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA2C;;AAE3C,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCS,KADmC,GAC3B;AAA2B;AACjCC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,EAAE,EAAEJ,IAAI,EAAT;AAAaK,QAAAA,IAAI,EAAE;AAAnB,OADG,EAEH;AAACD,QAAAA,EAAE,EAAEJ,IAAI,EAAT;AAAaK,QAAAA,IAAI,EAAE;AAAnB,OAFG,EAGH;AAACD,QAAAA,EAAE,EAAEJ,IAAI,EAAT;AAAaK,QAAAA,IAAI,EAAE;AAAnB,OAHG,EAIH;AAACD,QAAAA,EAAE,EAAEJ,IAAI,EAAT;AAAaK,QAAAA,IAAI,EAAE;AAAnB,OAJG;AADD,KAD2B;AAAA;;AAUnCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKD,KAAvB,CADO,CACyB;;AAChC,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,KAAK,EAAE;AAACK,QAAAA,YAAY,EAAE;AAAf,OAFP;AAGA,MAAA,OAAO,EAAE,MAAM;AACX,cAAMF,IAAI,GAAGG,MAAM,CAAC,YAAD,CAAnB;;AACA,YAAGH,IAAH,EAAS;AACL,eAAKI,QAAL,CAAcP,KAAK,KAAK;AACpBC,YAAAA,KAAK,EAAE,CAAC,GAAGD,KAAK,CAACC,KAAV,EAAiB;AAACC,cAAAA,EAAE,EAAEJ,IAAI,EAAT;AAAaK,cAAAA;AAAb,aAAjB;AADa,WAAL,CAAnB;AAGH;AACJ,OAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KAAK,CAACO,GAAN,CAAU,CAAC;AAACN,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAD,KACT,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED,EAApB;AAAwB,MAAA,OAAO,EAAE,GAAjC;AAAsC,MAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IADL,CADJ,CADD,CADL,CADJ,CAdJ,CADJ;AA4BD;;AAxCkC;;AA2CrC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button\n} from 'reactstrap';\nimport {\n  CSSTransition, \n  TransitionGroup\n} from 'react-transition-group';\nimport uuid from 'react-uuid';             //generate ids for items = static for now\n\nclass ShoppingList extends Component {\n  state = {                          // an array of items, hardcoded for now will later be from the mongoDB\n    items: [\n        {id: uuid(), name: 'Eggs'},\n        {id: uuid(), name: 'Milk'},\n        {id: uuid(), name: 'Steak'},\n        {id: uuid(), name: 'Water'}\n    ]\n  }\n  \n  render() {\n    const { items } = this.state;   // {} = destructoring, we pull items from this.state and put into variable items\n    return(\n        <Container>\n            <Button \n            color=\"dark\" \n            style={{marginBottom: '2rem'}} \n            onClick={() => {\n                const name = prompt('Enter Item');\n                if(name) {\n                    this.setState(state => ({\n                        items: [...state.items, {id: uuid(), name}]\n                    }));\n                }\n            } }>\n              Add Item \n            </Button>\n            <ListGroup>\n                <TransitionGroup className=\"shopping-list\">\n                    {items.map(({id, name}) => (\n                      <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                          <ListGroupItem>\n                              {name}\n                          </ListGroupItem>\n                      </CSSTransition>  \n                    ))}\n                </TransitionGroup>\n            </ListGroup>\n        </Container>\n    )\n  }\n}\n\nexport default ShoppingList;"]},"metadata":{},"sourceType":"module"}