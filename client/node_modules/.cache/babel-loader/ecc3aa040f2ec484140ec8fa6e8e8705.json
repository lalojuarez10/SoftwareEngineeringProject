{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ProductsList.js\";\n// Product component that we want to render on the UI\n// Concept: Components let you split UI into independed pieces\n//          props are inputs\n//          Return what we want to appear on the screen\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'; // connect the product store to the react component\n\nimport { getProducts } from '../actions/productActions';\nimport PropTypes from 'prop-types';\nimport { addItem } from '../actions/itemActions';\n\nclass ProductsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onSubmit = itemName => {\n      const newItem = {\n        name: itemName,\n        userID: this.props.user._id\n      }; // Add item via addItem action\n\n      this.props.addItem(newItem); // Close Modal\n\n      this.toggle();\n    };\n  }\n\n  // Product component is rendered for the first time\n  componentDidMount() {\n    this.props.getProducts();\n  } // Here we define the actual product component we want to render to the UI\n\n\n  render() {\n    const {\n      products\n    } = this.props.products;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"products-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, products.map(({\n      productID,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: productID,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"addToCart-btn\",\n      color: \"dark\",\n      size: \"sm\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, name), React.createElement(TransitionGroup, {\n      className: \"m\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CSSTransition, {\n      key: productID,\n      timeout: 500,\n      mountOnEnter: \"true\",\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" Add item to Shopping Cart?\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"yes\",\n      color: \"dark\",\n      size: \"sm\",\n      onClick: this.onSubmit.bind(this, productID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"YES\")))))))))));\n  }\n\n} // Mapping the desired redux states(stores) from index.js to this component\n\n\nProductsList.propTypes = {\n  getProducts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.product,\n  // property: index reducer\n  user: state.auth.user // property: index reducer\n\n}); // Connect the Store to this component\n\n\nexport default connect(mapStateToProps, {\n  getProducts,\n  addItem\n})(ProductsList);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ProductsList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","CSSTransition","TransitionGroup","connect","getProducts","PropTypes","addItem","ProductsList","state","modal","toggle","setState","onSubmit","itemName","newItem","name","userID","props","user","_id","componentDidMount","render","products","map","productID","bind","propTypes","func","isRequired","mapStateToProps","product","auth"],"mappings":"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","sourcesContent":["// Product component that we want to render on the UI\n// Concept: Components let you split UI into independed pieces\n//          props are inputs\n//          Return what we want to appear on the screen\nimport React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody\n} from 'reactstrap';\nimport {\n  CSSTransition,\n  TransitionGroup\n} from 'react-transition-group';\n\nimport { connect } from 'react-redux'; // connect the product store to the react component\nimport { getProducts } from '../actions/productActions';\nimport PropTypes from 'prop-types';\nimport { addItem } from '../actions/itemActions';\n\n\nclass ProductsList extends Component {\n  // State of the component\n  state = {\n    modal: false\n  }\n\n  // prop-types to document the intended types of properties passed to components\n  static propTypes = {\n    getProducts: PropTypes.func.isRequired,\n  };\n\n  // Toggle the modal to open and close\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onSubmit = (itemName) => {\n    const newItem = {\n      name: itemName,\n      userID: this.props.user._id\n    }\n\n    // Add item via addItem action\n    this.props.addItem(newItem);\n\n    // Close Modal\n    this.toggle();\n  }\n\n  // Product component is rendered for the first time\n  componentDidMount() {\n    this.props.getProducts();\n  }\n\n  // Here we define the actual product component we want to render to the UI\n  render() {\n    const { products } = this.props.products;\n\n    return (\n      <Container>\n        <ListGroup>\n          <TransitionGroup className=\"products-list\">\n            {products.map(({ productID, name }) => (\n              <CSSTransition key={productID} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <Button\n                    className=\"addToCart-btn\"\n                    color=\"dark\"\n                    size=\"sm\"\n                    onClick={this.toggle}>\n                    {name}\n                  </Button>\n                  <TransitionGroup className=\"m\">\n                    <CSSTransition key={productID} timeout={500} mountOnEnter=\"true\" classNames=\"fade\">\n                      <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                        <ModalHeader toggle={this.toggle}> Add item to Shopping Cart?</ModalHeader>\n                        <ModalBody>\n                          <Button\n                            className=\"yes\"\n                            color=\"dark\"\n                            size=\"sm\"\n                            onClick={this.onSubmit.bind(this, productID)}>\n                            YES\n                        </Button>\n                        </ModalBody>\n                      </Modal>\n                    </CSSTransition>\n                  </TransitionGroup>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\n// Mapping the desired redux states(stores) from index.js to this component\nconst mapStateToProps = (state) => ({\n  products: state.product,                 // property: index reducer\n  user: state.auth.user                    // property: index reducer\n});\n\n// Connect the Store to this component\nexport default connect(mapStateToProps, { getProducts, addItem })(ProductsList);"]},"metadata":{},"sourceType":"module"}