{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'react-uuid'; //generate ids for items = static for now\n\nimport { connect } from 'react'; // get state from redux into a react component\n\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  // an array of items, hardcoded for now will later be from the mongoDB\n  componentDidMount() {\n    // runs when component mounts such as making an API request\n    this.props.getItems();\n  }\n\n  render() {\n    const {\n      items\n    } = this.state; // {} = destructoring, we pull items from this.state and put into variable items\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const name = prompt('Enter Item');\n\n        if (name) {\n          this.setState(state => ({\n            items: [...state.items, {\n              id: uuid(),\n              name\n            }]\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add Item\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, items.map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"dark\",\n      size: \"sm\",\n      onClick: () => {\n        this.setState(state => ({\n          items: state.items.filter(item => item.id != id)\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\xD7\"), name))))));\n  }\n\n}\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  // set the type to a function that is required\n  item: PropTypes.object.isRequired // object that represents our state\n\n};\n\nconst mapStateToProps = state => ({\n  item: state.item // based on reducer in index.js\n\n}); // since we are using connect to get state from redux we need to export using connect\n\n\nexport default connect(mapStateToProps, {\n  getItems\n})(ShoppingList); //                   function, any actions we want to use, the component","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","connect","getItems","PropTypes","ShoppingList","componentDidMount","props","render","items","state","marginBottom","name","prompt","setState","id","map","filter","item","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,YALP;AAMA,SACEC,aADF,EAEEC,eAFF,QAGO,wBAHP;AAIA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA2C;;AAC3C,SAASC,OAAT,QAAwB,OAAxB,C,CAA2C;;AAC3C,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AACV;AACzBY,EAAAA,iBAAiB,GAAG;AAAK;AACvB,SAAKC,KAAL,CAAWJ,QAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB,CADO,CACyB;;AAChC,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAFP;AAGA,MAAA,OAAO,EAAE,MAAM;AACX,cAAMC,IAAI,GAAGC,MAAM,CAAC,YAAD,CAAnB;;AACA,YAAGD,IAAH,EAAS;AACL,eAAKE,QAAL,CAAcJ,KAAK,KAAK;AACpBD,YAAAA,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACD,KAAV,EAAiB;AAACM,cAAAA,EAAE,EAAEd,IAAI,EAAT;AAAaW,cAAAA;AAAb,aAAjB;AADa,WAAL,CAAnB;AAGH;AACJ,OAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,KAAK,CAACO,GAAN,CAAU,CAAC;AAACD,MAAAA,EAAD;AAAKH,MAAAA;AAAL,KAAD,KACT,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEG,EAApB;AAAwB,MAAA,OAAO,EAAE,GAAjC;AAAsC,MAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,OAAO,EAAE,MAAM;AACX,aAAKD,QAAL,CAAcJ,KAAK,KAAK;AACpBD,UAAAA,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYQ,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACH,EAAL,IAAWA,EAAtC;AADa,SAAL,CAAnB;AAGH,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAaKH,IAbL,CADJ,CADD,CADL,CADJ,CAdJ,CADJ;AAwCD;;AAhDkC;;AAmDrCP,YAAY,CAACc,SAAb,GAAyB;AACrBhB,EAAAA,QAAQ,EAAEC,SAAS,CAACgB,IAAV,CAAeC,UADJ;AACqB;AAC1CH,EAAAA,IAAI,EAAEd,SAAS,CAACkB,MAAV,CAAiBD,UAFF,CAE+B;;AAF/B,CAAzB;;AAKA,MAAME,eAAe,GAAIb,KAAD,KAAY;AAChCQ,EAAAA,IAAI,EAAER,KAAK,CAACQ,IADoB,CACQ;;AADR,CAAZ,CAAxB,C,CAIA;;;AACA,eAAehB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,YAAxC,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button\n} from 'reactstrap';\nimport {\n  CSSTransition, \n  TransitionGroup\n} from 'react-transition-group';\nimport uuid from 'react-uuid';             //generate ids for items = static for now\nimport { connect } from 'react';           // get state from redux into a react component\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n                           // an array of items, hardcoded for now will later be from the mongoDB\n  componentDidMount() {    // runs when component mounts such as making an API request\n    this.props.getItems();\n  }\n\n  render() {\n    const { items } = this.state;   // {} = destructoring, we pull items from this.state and put into variable items\n    return(\n        <Container>\n            <Button \n            color=\"dark\" \n            style={{marginBottom: '2rem'}} \n            onClick={() => {\n                const name = prompt('Enter Item');\n                if(name) {\n                    this.setState(state => ({\n                        items: [...state.items, {id: uuid(), name}]\n                    }));\n                }\n            } }>\n              Add Item \n            </Button>\n            <ListGroup>\n                <TransitionGroup className=\"shopping-list\">\n                    {items.map(({id, name}) => (\n                      <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                          <ListGroupItem>\n                          <Button\n                            className=\"remove-btn\"\n                            color=\"dark\"\n                            size=\"sm\"\n                            onClick={() => {\n                                this.setState(state => ({\n                                    items: state.items.filter(item => item.id != id)\n                                }));\n                            }}\n                            >\n                              &times;\n                            </Button>\n                              {name}\n                          </ListGroupItem>\n                      </CSSTransition>  \n                    ))}\n                </TransitionGroup>\n            </ListGroup>\n        </Container>\n    )\n  }\n}\n\nShoppingList.propTypes = {\n    getItems: PropTypes.func.isRequired,      // set the type to a function that is required\n    item: PropTypes.object.isRequired                   // object that represents our state\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.item                        // based on reducer in index.js\n})\n\n// since we are using connect to get state from redux we need to export using connect\nexport default connect(mapStateToProps, { getItems }) (ShoppingList);\n//                   function, any actions we want to use, the component"]},"metadata":{},"sourceType":"module"}