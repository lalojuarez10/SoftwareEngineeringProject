{"ast":null,"code":"// make our requests to our backend\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport axios from 'axios'; // each returns an action object with a type (and payload) field(s)\n// Component makes an aciton -> we use dispatch to send data from our backend \n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading()); // dispatch() to send the type to the reducer -> returns whatever is in the state and sets loading to true     \n\n  axios.get('/api/items') // get request to 'api/items' which is our backend\n  .then(res => dispatch({\n    // this gives us a response \n    type: GET_ITEMS,\n    payload: res.data // the data that comes from the backend\n\n  }));\n};\nexport const deleteItem = id => dispatch => {\n  // takes in id to know which item to delete\n  axios.delete(`/api/items/${id}`).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  }));\n}; // adding item from modal component \n\nexport const addItem = item => dispatch => {\n  axios.post('/api/items', item) // add items to the backend\n  .then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data // data to be added to the backend\n\n  }));\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","axios","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","deleteItem","id","delete","addItem","item","post"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,aAA3C,QAAgE,SAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR,CADsC,CACW;;AACjDH,EAAAA,KAAK,CAACI,GAAN,CAAU,YAAV,EAAiD;AAAjD,GACGC,IADH,CACQC,GAAG,IAAIJ,QAAQ,CAAC;AAAwB;AAC1CK,IAAAA,IAAI,EAAEX,SADY;AAElBY,IAAAA,OAAO,EAAEF,GAAG,CAACG,IAFK,CAEwB;;AAFxB,GAAD,CADvB;AAMH,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQT,QAAQ,IAAI;AAAM;AAClDF,EAAAA,KAAK,CAACY,MAAN,CAAc,cAAaD,EAAG,EAA9B,EAAiCN,IAAjC,CAAsCC,GAAG,IACvCJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAET,WADC;AAEPU,IAAAA,OAAO,EAAEG;AAFF,GAAD,CADV;AAMD,CAPM,C,CAQP;;AACA,OAAO,MAAME,OAAO,GAAGC,IAAI,IAAIZ,QAAQ,IAAI;AACzCF,EAAAA,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBD,IAAzB,EAA8C;AAA9C,GACGT,IADH,CACQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,QADC;AAEPW,IAAAA,OAAO,EAAEF,GAAG,CAACG,IAFN,CAE8B;;AAF9B,GAAD,CAFZ;AAOD,CARM;AAUP,OAAO,MAAMN,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM","sourcesContent":["// make our requests to our backend\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport axios from 'axios';\n\n// each returns an action object with a type (and payload) field(s)\n\n// Component makes an aciton -> we use dispatch to send data from our backend \nexport const getItems = () => dispatch => {         \n    dispatch(setItemsLoading());                     // dispatch() to send the type to the reducer -> returns whatever is in the state and sets loading to true     \n    axios.get('/api/items')                          // get request to 'api/items' which is our backend\n      .then(res => dispatch({                       // this gives us a response \n          type: GET_ITEMS,\n          payload: res.data                         // the data that comes from the backend\n      })\n    )\n};\n\nexport const deleteItem = (id) => dispatch => {     // takes in id to know which item to delete\n  axios.delete(`/api/items/${id}`).then(res =>\n    dispatch({\n      type: DELETE_ITEM,\n      payload: id\n    })\n)\n};\n// adding item from modal component \nexport const addItem = item => dispatch => {     \n  axios.post('/api/items', item)                // add items to the backend\n    .then(res => \n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data                    // data to be added to the backend\n      })\n    )\n};\n\nexport const setItemsLoading = () => {\n    return {\n        type: ITEMS_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}