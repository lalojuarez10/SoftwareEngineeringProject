{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/CheckoutModal.js\";\n// Checkout component that we want to render on the UI\n// Concept: Modal displayed after customer hits the Checkout Button\n//          Check out button will be rendered in the Shopping Cart Modal\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { loadUser } from '../actions/authActions';\nimport PropTypes from 'prop-types';\n\nclass CheckoutModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems(this.props.user.user._id);\n    this.props.loadUser();\n  }\n\n  render() {\n    const {\n      items\n    } = this.props.item;\n    const {\n      user\n    } = this.props.user;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Proceed to Checkout\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Checkout\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Review Items\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"checkout-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, name))))), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Shipping Address\"), user.streetAddress)));\n  }\n\n}\n\nCheckoutModal.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  loadUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  loadUser\n})(CheckoutModal);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/CheckoutModal.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","Label","CSSTransition","TransitionGroup","connect","getItems","loadUser","PropTypes","CheckoutModal","state","modal","toggle","setState","componentDidMount","props","user","_id","render","items","item","marginTop","map","name","streetAddress","propTypes","func","isRequired","object","mapStateToProps","isAuthenticated","auth"],"mappings":";AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,KARF,QASO,YATP;AAUA,SACEC,aADF,EAEEC,eAFF,QAGO,wBAHP;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4Bf,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCgB,KAFoC,GAE5B;AACNC,MAAAA,KAAK,EAAE;AADD,KAF4B;;AAAA,SAcpCC,MAdoC,GAc3B,MAAM;AACb,WAAKC,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADP,OAAd;AAGD,KAlBmC;AAAA;;AAoBpCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,QAAX,CAAoB,KAAKS,KAAL,CAAWC,IAAX,CAAgBA,IAAhB,CAAqBC,GAAzC;AACA,SAAKF,KAAL,CAAWR,QAAX;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKJ,KAAL,CAAWK,IAA7B;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAW,KAAKD,KAAL,CAAWC,IAA5B;AAGA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,MAAA,KAAK,MAHP;AAIE,MAAA,OAAO,EAAE,KAAKT,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAQE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KADrB;AAEE,MAAA,MAAM,EAAE,KAAKC,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,KAAK,CAACG,GAAN,CAAU,CAAC;AAAEL,MAAAA,GAAF;AAAOM,MAAAA;AAAP,KAAD,KACT,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEN,GAApB;AAAyB,MAAA,OAAO,EAAE,GAAlC;AAAuC,MAAA,UAAU,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,IADH,CADF,CADD,CADH,CADF,CAHF,EAcE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdF,EAeGP,IAAI,CAACQ,aAfR,CALF,CARF,CADF;AAmCD;;AAjEmC;;AAAhCf,a,CAOGgB,S,GAAY;AACjBnB,EAAAA,QAAQ,EAAEE,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEjBP,EAAAA,IAAI,EAAEZ,SAAS,CAACoB,MAAV,CAAiBD,UAFN;AAGjBpB,EAAAA,QAAQ,EAAEC,SAAS,CAACkB,IAAV,CAAeC;AAHR,C;;AA8DrB,MAAME,eAAe,GAAGnB,KAAK,KAAK;AAChCU,EAAAA,IAAI,EAAEV,KAAK,CAACU,IADoB;AAEhCU,EAAAA,eAAe,EAAEpB,KAAK,CAACqB,IAAN,CAAWD,eAFI;AAGhCd,EAAAA,IAAI,EAAEN,KAAK,CAACqB;AAHoB,CAAL,CAA7B;;AAMA,eAAe1B,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAiDE,aAAjD,CAAf","sourcesContent":["// Checkout component that we want to render on the UI\n// Concept: Modal displayed after customer hits the Checkout Button\n//          Check out button will be rendered in the Shopping Cart Modal\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label\n} from 'reactstrap';\nimport {\n  CSSTransition,\n  TransitionGroup\n} from 'react-transition-group';\n\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { loadUser } from '../actions/authActions';\nimport PropTypes from 'prop-types';\n\nclass CheckoutModal extends Component {\n  // State of the component\n  state = {\n    modal: false\n  }\n\n  // Prop-types to document the inteded types of properties passed to components\n  static propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired,\n    loadUser: PropTypes.func.isRequired\n  };\n\n  // Toggle the modal to open and close\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  componentDidMount() {\n    this.props.getItems(this.props.user.user._id);\n    this.props.loadUser();\n  }\n\n  render() {\n    const { items } = this.props.item;\n    const { user } = this.props.user;\n\n\n    return (\n      <Container>\n        <Button\n          color=\"dark\"\n          style={{ marginTop: '2rem' }}\n          block\n          onClick={this.toggle}>\n          Proceed to Checkout\n          </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader toggle={this.toggle}> Checkout</ModalHeader>\n          <ModalBody>\n            <Label> Review Items</Label>\n\n            <ListGroup>\n              <TransitionGroup className=\"checkout-list\">\n                {items.map(({ _id, name }) => (\n                  <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                    <ListGroupItem>\n                      {name}\n                    </ListGroupItem>\n                  </CSSTransition>\n                ))}\n              </TransitionGroup>\n            </ListGroup>\n            <Label>Shipping Address</Label>\n            {user.streetAddress}\n          </ModalBody>\n        </Modal>\n      </Container>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth\n});\n\nexport default connect(mapStateToProps, { getItems, loadUser })(CheckoutModal);\n"]},"metadata":{},"sourceType":"module"}