{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/AppNavbar.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport Logout from './auth/Logout';\nimport LoginModal from './auth/LoginModal';\n\nclass AppNavbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.toggle = () => {\n      // toggle the navbar from close to open and vice versa              \n      this.setState({\n        //this pertains to the class i.e the component\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const {\n      isAuthenticated,\n      user\n    } = this.state.auth; // all state values of authReducer\n\n    const authLinks = // this is for users who are logged in\n    React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n    const guestLinks = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(RegisterModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(LoginModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"dark\",\n      dark: true,\n      expand: \"sm\",\n      className: \"mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ShoppingList\"), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nAppNavbar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/AppNavbar.js"],"names":["React","Component","Fragment","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Container","connect","PropTypes","RegisterModal","Logout","LoginModal","AppNavbar","state","isOpen","toggle","setState","render","isAuthenticated","user","auth","authLinks","guestLinks","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,QADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,GALF,EAMEC,OANF,EAOEC,OAPF,EAQEC,SARF,QASO,YATP;AAUA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBf,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCgB,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE;AADF,KADwB;;AAAA,SAShCC,MATgC,GASvB,MAAM;AAAqB;AAClC,WAAKC,QAAL,CAAc;AAAkB;AAC9BF,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGD,KAb+B;AAAA;;AAehCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKN,KAAL,CAAWO,IAA7C,CADO,CAC8C;;AAErD,UAAMC,SAAS,GAAY;AACzB,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAQA,UAAMC,UAAU,GACd,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAWA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,MAAM,EAAC,IAAjC;AAAsC,MAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKP,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAA7B;AAAqC,MAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF,CADF,CADF;AAeD;;AApD+B;;AAA5BF,S,CAKGW,S,GAAY;AACjBH,EAAAA,IAAI,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC;AADN,C;;AAkDrB,MAAMC,eAAe,GAAGb,KAAK,KAAK;AAChCO,EAAAA,IAAI,EAAEP,KAAK,CAACO;AADoB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bd,SAA/B,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport Logout from './auth/Logout';\nimport LoginModal from './auth/LoginModal';\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  }\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  }\n  // we use the arrow function for custom made functions\n  toggle = () => {                    // toggle the navbar from close to open and vice versa              \n    this.setState({                 //this pertains to the class i.e the component\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { isAuthenticated, user } = this.state.auth;   // all state values of authReducer\n\n    const authLinks = (        // this is for users who are logged in\n      <Fragment>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    )\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);"]},"metadata":{},"sourceType":"module"}