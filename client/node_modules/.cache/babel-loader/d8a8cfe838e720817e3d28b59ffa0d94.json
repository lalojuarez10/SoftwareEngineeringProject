{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'; // get state from redux into a react component\n\nimport { getItems, deleteItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id);\n    };\n  }\n\n  componentDidMount() {\n    // runs when component mounts such as making an API request\n    this.props.getItems(); // calls the redux (store) action to get all the items in the store\n  }\n\n  render() {\n    const {\n      items\n    } = this.props.item; // {} = destructoring, we pull items from this.state and put into variable items\n\n    console.log(items);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add to Shopping List\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.isAuthenticated ? React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"dark\",\n      size: \"sm\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\xD7\") : null, name)))))))));\n  }\n\n} // takes in state and pass in an object(state.item), the function then returns an object with the field item which holds the state.item\n\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  // set the type to a function that is required\n  item: PropTypes.object.isRequired,\n  // object that represents our state\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  // based on reducer in index.js\n  isAuthenticated: state.auth.isAuthenticated\n}); // since we are using connect to get state from redux we need to export using connect\n\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem\n}) // any action you bring from import put here as well\n(ShoppingList); //                   function, any actions we want to use, the component","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","CSSTransition","TransitionGroup","connect","getItems","deleteItem","PropTypes","ShoppingList","state","modal","toggle","setState","onDeleteClick","id","props","componentDidMount","render","items","item","console","log","map","_id","name","isAuthenticated","bind","propTypes","func","isRequired","object","bool","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody\n} from 'reactstrap';\nimport {\n  CSSTransition,\n  TransitionGroup\n} from 'react-transition-group';\nimport { connect } from 'react-redux';           // get state from redux into a react component\nimport { getItems, deleteItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  // NEW\n  state = {\n    modal: false\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  // shopping list object will have the redux action getItems and will have item = our state\n  static propTypes = {\n    getItems: PropTypes.func.isRequired,      // set the type to a function that is required\n    item: PropTypes.object.isRequired,        // object that represents our state\n    isAuthenticated: PropTypes.bool\n  };\n\n  componentDidMount() {    // runs when component mounts such as making an API request\n    this.props.getItems(); // calls the redux (store) action to get all the items in the store\n  }\n\n  onDeleteClick = (id) => {\n    this.props.deleteItem(id);\n  }\n\n  render() {\n    const { items } = this.props.item;   // {} = destructoring, we pull items from this.state and put into variable items\n    console.log(items);\n    return (\n      <div>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader toggle={this.toggle}>Add to Shopping List</ModalHeader>\n          <ModalBody>\n            <Container>\n              <ListGroup>\n                <TransitionGroup className=\"shopping-list\">\n                  {items.map(({ _id, name }) => (\n                    <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                      <ListGroupItem>\n                        {this.props.isAuthenticated ? <Button\n                          className=\"remove-btn\"\n                          color=\"dark\"\n                          size=\"sm\"\n                          onClick={this.onDeleteClick.bind(this, _id)}\n                        >\n                          &times;\n                            </Button> : null}\n\n                        {name}\n                      </ListGroupItem>\n                    </CSSTransition>\n                  ))}\n                </TransitionGroup>\n              </ListGroup>\n            </Container>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n// takes in state and pass in an object(state.item), the function then returns an object with the field item which holds the state.item\nconst mapStateToProps = state => ({\n  item: state.item,                       // based on reducer in index.js\n  isAuthenticated: state.auth.isAuthenticated\n});\n\n// since we are using connect to get state from redux we need to export using connect\nexport default connect(mapStateToProps,\n  { getItems, deleteItem })          // any action you bring from import put here as well\n  (ShoppingList);\n//                   function, any actions we want to use, the component"]},"metadata":{},"sourceType":"module"}