{"ast":null,"code":"// make our requests to our backend\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport axios from 'axios'; // each returns an action object with a type (and payload) field(s)\n\nexport const getItems = () => dispatch => {\n  // all we are doing is sending the type to itemReducer\n  dispatch(setItemsLoading());\n  axios.get('/api/items').then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  }));\n};\nexport const deleteItem = id => {\n  // takes in id to know which item to delete\n  return {\n    type: DELETE_ITEM,\n    payload: id //   \n\n  };\n};\nexport const addItem = item => {\n  // takes in id to know which item to delete\n  return {\n    type: ADD_ITEM,\n    payload: item\n  };\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/actions/itemActions.js"],"names":["GET_ITEMS","ADD_ITEM","DELETE_ITEM","ITEMS_LOADING","axios","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","deleteItem","id","addItem","item"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,aAA3C,QAAgE,SAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AAAW;AACjDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAH,EAAAA,KAAK,CAACI,GAAN,CAAU,YAAV,EACGC,IADH,CACQC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEX,SADY;AAElBY,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADvB;AAMH,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ;AAAM;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAET,WADH;AAEHU,IAAAA,OAAO,EAAEG,EAFN,CAE4B;;AAF5B,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,OAAO,GAAGC,IAAI,IAAI;AAAM;AACjC,SAAO;AACHN,IAAAA,IAAI,EAAEV,QADH;AAEHW,IAAAA,OAAO,EAAEK;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMV,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM","sourcesContent":["// make our requests to our backend\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport axios from 'axios';\n\n// each returns an action object with a type (and payload) field(s)\nexport const getItems = () => dispatch => {          // all we are doing is sending the type to itemReducer\n    dispatch(setItemsLoading());\n    axios.get('/api/items')\n      .then(res => dispatch({\n          type: GET_ITEMS,\n          payload: res.data\n      })\n      )\n};\n\nexport const deleteItem = (id) => {     // takes in id to know which item to delete\n    return {\n        type: DELETE_ITEM, \n        payload: id                    //   \n    };\n};\n\nexport const addItem = item => {     // takes in id to know which item to delete\n    return {\n        type: ADD_ITEM, \n        payload: item           \n    };\n};\n\nexport const setItemsLoading = () => {\n    return {\n        type: ITEMS_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}